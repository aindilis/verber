;; <problem-file>

;; (generate the pantry problem from the pantry contents, so as to
;;  limit the number of entries, as opposed to all possible)

;; ((Home Storage Solutions 101: A place for everything that matters)

;;  ((Fresh Food Stoage Guidelines for Refrigerator {Cheat Sheet})
;;   (Freezer Storage Times {Cheat Sheet})
;;   (Pantry Food Storage Chart: Common Shelf Life {Cheat Sheet})

;;   (Michigan Availability Guide (Vegetables))
;;   (Michigan Availability Guide (Fruits))
;;   (What should be discarded after a power outage)

;;   ))


(define (problem mealPlanningPantry)

 (:domain mealPlanningPantry)

 ;; (:includes)

 ;; (:timing
 ;;  (start-date TZID=America/Chicago:20161228T010000)
 ;;  (units 0000-00-00_01:00:00)
 ;;  )

 (:objects
  andrewDougherty - AGENT

  ;; beefRavioli_ChefBoyardee spaghettiRingsPastaWithMeatballs_GreatValue
  ;; macAndCheese_ChefBoyardee chickenNoodeSoup_GreatValue
  ;; traditionalSplitPeaWithHam_Progresso - PRODUCT

  beefRavioli_ChefBoyardee1
  spaghettiRingsPastaWithMeatballs_GreatValue1
  macAndCheese_ChefBoyardee1 chickenNoodeSoup_GreatValue1
  traditionalSplitPeaWithHam_Progresso1 - INSTANCE

  walmart1 - SUPPLIER

  calories - TYPE
  )

 (:init
  (= (intake calories andrewDougherty) 0.0)
  ;; (= (actions) 0.0)

  (notConsumed beefRavioli_ChefBoyardee1)
  (notConsumed spaghettiRingsPastaWithMeatballs_GreatValue1)
  (notConsumed macAndCheese_ChefBoyardee1)
  (notConsumed chickenNoodeSoup_GreatValue1)
  (notConsumed traditionalSplitPeaWithHam_Progresso1)

  ;; CALORIE COUNT
  (= (nf calories beefRavioli_ChefBoyardee1) 460.0)
  (= (nf calories spaghettiRingsPastaWithMeatballs_GreatValue1) 460.0)
  (= (nf calories macAndCheese_ChefBoyardee1) 420.0)
  (= (nf calories chickenNoodeSoup_GreatValue1) 200.0)
  (= (nf calories traditionalSplitPeaWithHam_Progresso1) 280.0)

  ;; ;; ;; SODIUM COUNT
  ;; ;; (= (calories beefRavioli_ChefBoyardee) 0.62)
  ;; ;; (= (calories spaghettiRingsPastaWithMeatballs_GreatValue) 0.50)
  ;; ;; (= (calories macAndCheese_ChefBoyardee) 0.56)
  ;; ;; (= (calories chickenNoodeSoup_GreatValue) 0.58)
  ;; ;; (= (calories traditionalSplitPeaWithHam_Progresso) 0.58)


  ;; ;; ;; PRODUCT COSTS
  ;; ;; (= (costs beefRavioli_ChefBoyardee walmart1) 0.99)
  ;; ;; (= (costs spaghettiRingsPastaWithMeatballs_GreatValue walmart1) 0.69)
  ;; ;; (= (costs macAndCheese_ChefBoyardee walmart1) 0.99)
  ;; ;; (= (costs chickenNoodeSoup_GreatValue walmart1) 0.99)
  ;; ;; (= (costs traditionalSplitPeaWithHam_Progresso walmart1) 1.99)

  ;; ;; INSTANCES OF PRODUCT
  ;; (instanceFn beefRavioli_ChefBoyardee beefRavioli_ChefBoyardee1)
  ;; (instanceFn spaghettiRingsPastaWithMeatballs_GreatValue spaghettiRingsPastaWithMeatballs_GreatValue1)
  ;; (instanceFn macAndCheese_ChefBoyardee macAndCheese_ChefBoyardee1)
  ;; (instanceFn chickenNoodeSoup_GreatValue chickenNoodeSoup_GreatValue1)
  ;; (instanceFn traditionalSplitPeaWithHam_Progresso traditionalSplitPeaWithHam_Progresso1)

  ;; ;; CALORIE COUNT
  ;; (= (calories beefRavioli_ChefBoyardee) 460.0)
  ;; (= (calories spaghettiRingsPastaWithMeatballs_GreatValue) 460.0)
  ;; (= (calories macAndCheese_ChefBoyardee) 420.0)
  ;; (= (calories chickenNoodeSoup_GreatValue) 200.0)
  ;; (= (calories traditionalSplitPeaWithHam_Progresso) 280.0)


  ;; ;; ;; STORAGE LOCATION OF INSTANCES
  ;; ;; (storage_location krogerRussetPotatoes1 pantry)
  ;; ;; (storage_location krogerHalfAndHalf1 fridge)
  ;; ;; (storage_location krogerUnsaltedButter1 fridge)
  ;; ;; (storage_location krogerKosherSalt1 pantry)
  ;; ;; (storage_location krogerFreshlyGroundBlackPepper1 pantry)
  ;; ;; (storage_location krogerDozenEggs1 fridge)

  )

 (:goal
  (and
   (replete andrewDougherty)
   )
  )
 
 (:metric minimize (intake calories andrewDougherty))
 )

;; </problem-file>
