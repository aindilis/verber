;; <domain-file>

(define (domain flpinventory)

 (:timing
  (units 0000-00-00_01:00:00)
  )

 (:requirements :negative-preconditions :conditional-effects :equality
  :typing :fluents :durative-actions :derived-predicates
  :disjunctive-preconditions :timed-initial-literals )

 (:types
  agent location type - object
  )
 
 (:predicates
  (has-location ?a - agent ?l - location)
  (out-of-type ?t - type ?l - location)
  )

 (:functions
  (has-inventory ?t - type ?l - location)
  )

 ;; DERIVED
 ;; (:derived (out-of-type ?t - type ?l - location)
 ;;  (= (has-inventory ?t ?l) 0))

 ;; DURATIVE ACTIONS
 (:durative-action consume
  :parameters (?a - agent ?l - location ?t - type)
  :duration (= ?duration 1.25)
  :condition (and
	      (at start (has-location ?a ?l))
 	      (at start (> (has-inventory ?t ?l) 0))
 	      )
  :effect (and 
 	   (at end (assign (has-inventory ?t ?l) (- (has-inventory ?t ?l) 1)))
	   (at end (out-of-type ?t ?l))
 	   )
  )

  (:durative-action resupply
  :parameters (?a - agent ?l - location ?t - type)
  :duration (= ?duration 1.25)
  :condition (and
 	      (at start (has-location ?a ?l))
 	      )
  :effect (and 
 	   (at end (assign (has-inventory ?t ?l) (+ (has-inventory ?t ?l) 1)))
 	   )
  )
 )

;; </domain-file>
