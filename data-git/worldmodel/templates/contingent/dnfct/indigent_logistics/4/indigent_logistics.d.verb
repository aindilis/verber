(define (domain indigent_logistics)

 (:requirements
  :typing
  ;; :verb-contingent
  )

 (:types PERSON OBJECT LOCATION)

 ;; (:includes)
 ;;
 ;; (:timing
 ;;  (units 0000-00-00_24:00:00)
 ;;  )

 (:predicates
  (at_pl ?person - PERSON  ?location - LOCATION)
  (at_ol ?object - OBJECT ?location - LOCATION)
  (in_ol ?object - OBJECT ?location - LOCATION)
  (in_op ?object - OBJECT ?person - PERSON)
  (finished ?person - PERSON)
  (true)
  )
 
 ;; (:functions)

 (:action sense_object_t
  :parameters (?object - OBJECT ?location - LOCATION ?person - PERSON)
  :precondition (at_pl ?person ?location)
  :effect (and (at_ol ?object ?location) (true)))

 ;; (:action EAT
 ;;  :parameters
 ;;  (?person - PERSON
 ;;   ?object - OBJECT
 ;;   ?location - LOCATION
 ;;   )
 ;;  :precondition
 ;;  (and 
 ;;   (at_pl ?person ?location)
 ;;   (at_ol ?object ?location) 
 ;;   )
 ;;  :effect
 ;;  (and
 ;;   (not (at_ol ?object ?location)) 
 ;;   (in_op ?object ?person)
 ;;   )
 ;;  )

 (:action MOVE
  :parameters
  (?person - PERSON
   ?loc1 ?loc2 - LOCATION
   )
  :precondition
  (and
   (at_pl ?person ?loc1)
   )
  :effect
  (and
   (not (at_pl ?person ?loc1)) 
   (at_pl ?person ?loc2)
   )
  )

 (:action OBTAIN
  :parameters
  (?person - PERSON
   ?object - OBJECT
   ?location - LOCATION
   )
  :precondition
  (and
   (at_pl ?person ?location)
   (at_ol ?object ?location)
   (not (in_op ?object ?person))
   )
  :effect
  (and
   (not (in_op ?object ?location))
   (in_op ?object ?person)
   )
  )

 (:action FINISH
  :parameters
  (?object - OBJECT
   ?person - PERSON
   )
  :precondition
  (and
   (in_op food1 ?person)
   (in_op freeCellularPhone1 ?person)
   (in_op warmMeal1 ?person)
   )
  :effect
  (and
   (finished ?person)
   )
  )
 )
